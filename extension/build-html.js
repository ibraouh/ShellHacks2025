#!/usr/bin/env node

/**
 * Build script to combine HTML files into JavaScript
 * This allows us to keep separate HTML files for development
 * while making them work in Chrome extensions
 */

const fs = require('fs');
const path = require('path');

const toolsDir = path.join(__dirname, 'html', 'tools');
const outputFile = path.join(__dirname, 'js', 'html-templates.js');

// List of tool IDs
const toolIds = [
  'text_to_speech',
  'speech_to_instructions', 
  'ai_alt_text',
  'adaptive_css',
  'semantic_search',
  'text_simplification',
  'test'
];

function buildHtmlTemplates() {
  console.log('Building HTML templates...');
  
  let jsContent = `// Auto-generated HTML templates
// This file is generated by build-html.js
// Do not edit manually - edit the files in html/tools/ instead

window.HtmlTemplates = {
`;

  toolIds.forEach(toolId => {
    const htmlFile = path.join(toolsDir, `${toolId}.html`);
    
    if (fs.existsSync(htmlFile)) {
      const htmlContent = fs.readFileSync(htmlFile, 'utf8');
      // Escape backticks and template literals for JavaScript
      const escapedHtml = htmlContent
        .replace(/`/g, '\\`')
        .replace(/\${/g, '\\${')
        .replace(/\n/g, '\\n')
        .replace(/\r/g, '\\r');
      
      jsContent += `  '${toolId}': \`${escapedHtml}\`,\n`;
      console.log(`✓ Loaded ${toolId}.html`);
    } else {
      console.warn(`⚠ Missing ${toolId}.html`);
      jsContent += `  '${toolId}': '<div id="${toolId}-content" class="tab-content"><div class="result error">Missing HTML template</div></div>',\n`;
    }
  });

  jsContent += `};

// Export for use in other modules
if (typeof module !== 'undefined' && module.exports) {
  module.exports = window.HtmlTemplates;
}`;

  fs.writeFileSync(outputFile, jsContent);
  console.log(`✓ Generated ${outputFile}`);
  console.log('HTML templates built successfully!');
}

// Run the build
buildHtmlTemplates();
